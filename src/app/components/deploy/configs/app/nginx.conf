{% set WEB_SETTINGS = SETTINGS['web'] %}
{% set DEPLOY_SETTINGS = SETTINGS['deploy'] %}

server {
  server_name {{ WEB_SETTINGS['domain'] }};
  listen 80;
  listen [::]:80;

  return 301 https://{{ WEB_SETTINGS['domain'] }}$request_uri;
}

server {
  server_name www.{{ WEB_SETTINGS['domain'] }};
  return 301 https://{{ WEB_SETTINGS['domain'] }}$request_uri;
}

upstream app {
  {%- for server in DEPLOY_SETTINGS['app']['instances'] %}
  server {{ server }} max_conns=200;
  {%- endfor %}
}

server {
  server_name {{ WEB_SETTINGS['domain'] }};

  listen 443 ssl http2;

  charset utf-8;

  send_timeout 360s;

  access_log {{ NGINX_SETTINGS['dir'] / 'logs' / 'access.log' }};
  error_log {{ NGINX_SETTINGS['dir'] / 'logs' / 'error.log' }};

  gzip on;
  gzip_types
    image/jpeg
    text/css
    application/font-woff
    application/javascript;
  gzip_comp_level 5;
  gzip_buffers 16 8k;
  gzip_min_length 512;

  ssl_certificate {{ NGINX_SETTINGS['certs'] / 'fullchain.pem' }};
  ssl_certificate_key {{ NGINX_SETTINGS['certs'] / 'privkey.pem' }};
  ssl_session_cache shared:SSL:5m;
  ssl_session_timeout 1h;

  add_header Strict-Transport-Security
    "max-age=15768000; includeSubDomains" always;

  location {{ WEB_SETTINGS['media']['urls']['public'] }}  {
    alias {{ WEB_SETTINGS['media']['paths']['public'] }};

    expires max;
    add_header Pragma public;
    add_header Cache-Control "public";
  }

  location {{ WEB_SETTINGS['media']['urls']['private'] }}  {
    alias {{ WEB_SETTINGS['media']['paths']['private'] }};

    # kill cache
    add_header Last-Modified $date_gmt;
    add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    if_modified_since off;
    expires off;
    etag off;
    internal;
  }

  location {{ WEB_SETTINGS['static']['urls']['public'] }} {
    alias {{ WEB_SETTINGS['static']['paths']['public'] }};

    expires max;
    add_header Pragma public;
    add_header Cache-Control "public";
  }

  location /.well-known/acme-challenge {
    alias {{ PROJECT_PATH }}/letsencrypt;
  }

  location / {
    proxy_pass http://app;
    proxy_http_version 1.1;

    proxy_buffers 32 8k;
    proxy_send_timeout 360;
    proxy_read_timeout 360;

    proxy_set_header Host $host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    client_max_body_size 10m;
    client_body_buffer_size 128k;
  }
}
